<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiye.boss.mapper.UserRoleFunctionMapper">
  <resultMap id="BaseResultMap" type="com.qiye.boss.model.UserRoleFunction">
    <result column="userID" jdbcType="INTEGER" property="userid" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="deptId" jdbcType="VARCHAR" property="deptid" />
    <result column="deptName" jdbcType="VARCHAR" property="deptname" />
    <result column="roleID" jdbcType="INTEGER" property="roleid" />
    <result column="roleName" jdbcType="VARCHAR" property="rolename" />
    <result column="functionCode" jdbcType="VARCHAR" property="functioncode" />
    <result column="functionName" jdbcType="VARCHAR" property="functionname" />
    <result column="functionId" jdbcType="INTEGER" property="functionid" />
    <result column="parentId" jdbcType="INTEGER" property="parentid" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userID, userName, password, deptId, deptName, roleID, roleName, functionCode, functionName, 
    functionId, parentId, type
  </sql>
  <select id="selectByExample" parameterType="com.qiye.boss.model.UserRoleFunctionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from v_user_role_function
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.qiye.boss.model.UserRoleFunctionExample">
    delete from v_user_role_function
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qiye.boss.model.UserRoleFunction">
    insert into v_user_role_function (userID, userName, password, 
      deptId, deptName, roleID, 
      roleName, functionCode, functionName, 
      functionId, parentId, type
      )
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{deptid,jdbcType=VARCHAR}, #{deptname,jdbcType=VARCHAR}, #{roleid,jdbcType=INTEGER}, 
      #{rolename,jdbcType=VARCHAR}, #{functioncode,jdbcType=VARCHAR}, #{functionname,jdbcType=VARCHAR}, 
      #{functionid,jdbcType=INTEGER}, #{parentid,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qiye.boss.model.UserRoleFunction">
    insert into v_user_role_function
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userID,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="deptid != null">
        deptId,
      </if>
      <if test="deptname != null">
        deptName,
      </if>
      <if test="roleid != null">
        roleID,
      </if>
      <if test="rolename != null">
        roleName,
      </if>
      <if test="functioncode != null">
        functionCode,
      </if>
      <if test="functionname != null">
        functionName,
      </if>
      <if test="functionid != null">
        functionId,
      </if>
      <if test="parentid != null">
        parentId,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="deptid != null">
        #{deptid,jdbcType=VARCHAR},
      </if>
      <if test="deptname != null">
        #{deptname,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="functioncode != null">
        #{functioncode,jdbcType=VARCHAR},
      </if>
      <if test="functionname != null">
        #{functionname,jdbcType=VARCHAR},
      </if>
      <if test="functionid != null">
        #{functionid,jdbcType=INTEGER},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiye.boss.model.UserRoleFunctionExample" resultType="java.lang.Long">
    select count(*) from v_user_role_function
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update v_user_role_function
    <set>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.deptid != null">
        deptId = #{record.deptid,jdbcType=VARCHAR},
      </if>
      <if test="record.deptname != null">
        deptName = #{record.deptname,jdbcType=VARCHAR},
      </if>
      <if test="record.roleid != null">
        roleID = #{record.roleid,jdbcType=INTEGER},
      </if>
      <if test="record.rolename != null">
        roleName = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.functioncode != null">
        functionCode = #{record.functioncode,jdbcType=VARCHAR},
      </if>
      <if test="record.functionname != null">
        functionName = #{record.functionname,jdbcType=VARCHAR},
      </if>
      <if test="record.functionid != null">
        functionId = #{record.functionid,jdbcType=INTEGER},
      </if>
      <if test="record.parentid != null">
        parentId = #{record.parentid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update v_user_role_function
    set userID = #{record.userid,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      deptId = #{record.deptid,jdbcType=VARCHAR},
      deptName = #{record.deptname,jdbcType=VARCHAR},
      roleID = #{record.roleid,jdbcType=INTEGER},
      roleName = #{record.rolename,jdbcType=VARCHAR},
      functionCode = #{record.functioncode,jdbcType=VARCHAR},
      functionName = #{record.functionname,jdbcType=VARCHAR},
      functionId = #{record.functionid,jdbcType=INTEGER},
      parentId = #{record.parentid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>